MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "October 27, 2015" 
);
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:20:05" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                October 27, 2015
Time:                13:20:05
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O29CJ_E0 
"C:\Users\bteric01\Documents\Tutorials_Projects\Project_2\Workspaces\EMWS1\Neural\EMTRAIN.out" 
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O29CJ_E0 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG 
"C:\Users\bteric01\Documents\Tutorials_Projects\Project_2\Workspaces\EMWS1\Neural\EMLOG.log" 
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "October 27, 2015" 
);
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:20:05" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                bteric01";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70080761";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M1P120413";
MPRINT(EM_DIAGRAM):   put "EM Version:          13.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN 
"C:\Users\bteric01\Documents\Tutorials_Projects\Project_2\Workspaces\EMWS1\Neural\EMTRAIN.log" 
encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN 
"C:\Users\bteric01\Documents\Tutorials_Projects\Project_2\Workspaces\EMWS1\Neural\EMSCORE.log" 
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN 
"C:\Users\bteric01\Documents\Tutorials_Projects\Project_2\Workspaces\EMWS1\Neural\EMREPORT.log"
 encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT 
"C:\Users\bteric01\Documents\Tutorials_Projects\Project_2\Workspaces\EMWS1\Neural\EMOUTPUT.out"
 encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "October 27, 2015" 
);
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:20:05" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                bteric01";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN 
"C:\Users\bteric01\Documents\Tutorials_Projects\Project_2\Workspaces\EMWS1\Neural\EMTRAIN.out" 
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN 
"C:\Users\bteric01\Documents\Tutorials_Projects\Project_2\Workspaces\EMWS1\Neural\EMSCORE.out" 
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN 
"C:\Users\bteric01\Documents\Tutorials_Projects\Project_2\Workspaces\EMWS1\Neural\EMREPORT.out"
 encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 
'C:\Users\bteric01\Documents\Tutorials_Projects\Project_2\Workspaces\EMWS1\Neural\EMRUNSTATUS.x
ml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 
'C:\Users\bteric01\Documents\Tutorials_Projects\Project_2\Workspaces\EMWS1\Neural\EMRUNSTATUS.x
ml' encoding="UTF-8" NOBOM;
31904      proc freq data=EMWS1.Neural_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Neural_VariableSet noprint;
31905      table ROLE*LEVEL/out=WORK.NeuralMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.NeuralMETA;
31906      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set EMWS1.NEURAL_VARIABLESET.
NOTE: The data set WORK.NEURALMETA has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

31907      proc print data=WORK.NeuralMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.NeuralMETA label noobs;
31908      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
31909      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
31909    ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
31909    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency 
Count";
31910      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
31911      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
31912      run;

NOTE: There were 3 observations read from the data set WORK.NEURALMETA.
NOTE: The PROCEDURE PRINT printed page 11.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

31913      title10;
MPRINT(EM_DIAGRAM):   title10;
31914      %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):   
EMWS1.FIMPORT_train EMWS1.FIMPORT_train 
EMWS1.FIMPORT_train EMWS1.FIMPORT_train EMWS1 FIMPORT_train 
EMWS1.FIMPORT_train EMWS1.FIMPORT_train 
EMWS1.FIMPORT_train EMWS1.FIMPORT_train EMWS1 FIMPORT_train 
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.FIMPORT_train 
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class WidgBuy(DESC) ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="WidgBuy";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY 
NMISSPERCENT rename=(LEVEL=WidgBuy));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="WidgBuy";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
>>>>>>>>>>>>>> TARGET(   USE='Y' 
                         REPORT='N' 
                         NAME='WidgBuy' 
                         ROLE='TARGET' 
                         LEVEL='BINARY' 
                         ORDER='' 
                         CREATOR='' 
                         FORMATTYPE='CATEGORY' 
                         FAMILY='' 
                         LOWERLIMIT=. 
                         UPPERLIMIT=. 
                         DISTRIBUTION='' 
                         COMMENT='' 
                         PRICE=. 
                         TYPE='C' 
                         LABEL='WidgBuy' 
                         FORMAT='$3.0' 
                         INFORMAT='$3.0' 
                         INDEX='N' 
                         INDEXTYPE='NONE' 
                         LENGTH=3 
                      )[18953] 
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.FIMPORT_train dmdbcat=WORK.EM_DMDB maxlevel = 
513 ;
MPRINT(EM_DIAGRAM):   class
MPRINT(DMDBCLASS):   WidgBuy(DESC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   target WidgBuy ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
WORK.EM_DMDB WORK.EM_DMDB 
WORK.EM_DMDB WORK.EM_DMDB WORK EM_DMDB 
MPRINT(EM_DIAGRAM):    proc datasets lib=EMWS1 nolist;
MPRINT(EM_DIAGRAM):   modify Neural_WidgBuy_DD(type=PROFIT label= WidgBuy);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Determine decision variables for WidgBuy;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.Neural_SCORE;
MPRINT(EM_DIAGRAM):   set EMWS1.FIMPORT_train;
MPRINT(EM_DIAGRAM):   keep WidgBuy;
MPRINT(EM_DIAGRAM):   keep 'P_WidgBuyYes'n;
MPRINT(EM_DIAGRAM):   'P_WidgBuyYes'n = 0.5;
MPRINT(EM_DIAGRAM):   keep 'P_WidgBuyNo'n;
MPRINT(EM_DIAGRAM):   'P_WidgBuyNo'n = 0.5;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   stop;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural_WidgBuy_DM;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_WidgBuy_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_ ^in('FREQ', 'BESTPROFIT', 'COMPUTEDPROFIT', 
'EXPECTEDPROFIT', 'BESTLOSS', 'COMPUTEDLOSS', 'EXPECTEDLOSS', 'ROI', 'INVESTMENTCOST', 
'MODELDECISION');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify WidgBuy(type=PROFIT label= WidgBuy);
MPRINT(EM_DIAGRAM):   label DECISION1= 'YES';
MPRINT(EM_DIAGRAM):   label DECISION2= 'NO';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural_WidgBuy_DM;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_WidgBuy_DM end=eof;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if eof then do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
31999      data WORK.Neural_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Neural_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
32000      length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
32001      label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
32001    ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
32001    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
32002         "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
32002    ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
32002    ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" 
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
32003      set EMWS1.NEURAL_WIDGBUY_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.NEURAL_WIDGBUY_DM( where=(_TYPE_="TARGET"));
32004      NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
32005      select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
32006      when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
32007      when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
32008      when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
32009      when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
32010      otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
32011      end;
MPRINT(EM_DIAGRAM):   end;
32012      output;
MPRINT(EM_DIAGRAM):   output;
32013      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.NEURAL_WIDGBUY_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.NEURAL_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

32014      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
32015      proc print data=WORK.Neural_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Neural_EVENT noobs label;
32016      var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
32017      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
32018      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
32019      run;

NOTE: There were 1 observations read from the data set WORK.NEURAL_EVENT.
NOTE: The PROCEDURE PRINT printed page 12.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

32020      title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "WidgBuy"." 
32021      proc print data = EMWS1.Neural_WidgBuy_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Neural_WidgBuy_DM noobs label;
32022      var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
32023      where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 
'DECPRIOR');
32024      label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
32024    ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
32024    ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
32025      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
32026      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
32027      run;

NOTE: There were 7 observations read from the data set EMWS1.NEURAL_WIDGBUY_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 13.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

32028      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Preparing metadata for training;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M3L884ZJ;
MPRINT(EM_DIAGRAM):   set WORK.M3L884ZJ;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
32038      data WORK.M3L884ZJ;
MPRINT(EM_DIAGRAM):    data WORK.M3L884ZJ;
32039      set WORK.M3L884ZJ end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M3L884ZJ end=eof;
32040      output;
MPRINT(EM_DIAGRAM):   output;
32041      if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
32042      NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
32043      ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
32044      LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
32045      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
32046      output;
MPRINT(EM_DIAGRAM):   output;
32047      end;
MPRINT(EM_DIAGRAM):   end;
32048      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set WORK.M3L884ZJ.
NOTE: The data set WORK.M3L884ZJ has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: There were 2 observations read from the data set EMWS1.NEURAL_WIDGBUY_DD.
NOTE: The data set WORK.WIDGBUY has 2 observations and 7 variables.
32049      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
32050      * Neural: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Neural: Create decision matrix;
32051      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
32052      data WORK.WidgBuy(label="WidgBuy");
MPRINT(EM_DIAGRAM):   data WORK.WidgBuy(label="WidgBuy");
32053        length   WidgBuy                          $  32
32054                 COUNT                                8
32055                 DATAPRIOR                            8
32056                 TRAINPRIOR                           8
32057                 DECPRIOR                             8
32058                 DECISION1                            8
32059                 DECISION2                            8
32060                 ;
MPRINT(EM_DIAGRAM):   length WidgBuy $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 
DECISION1 8 DECISION2 8 ;
32061      
32062        label    COUNT="Level Counts"
32063                 DATAPRIOR="Data Proportions"
32064                 TRAINPRIOR="Training Proportions"
32065                 DECPRIOR="Decision Priors"
32066                 DECISION1="YES"
32067                 DECISION2="NO"
32068                 ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= 
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "YES" DECISION2= "NO" ;
32069      WidgBuy="YES"; COUNT=11; DATAPRIOR=0.55; TRAINPRIOR=0.55; DECPRIOR=.; DECISION1=1;
32069    ! DECISION2=0;
MPRINT(EM_DIAGRAM):   WidgBuy="YES";
MPRINT(EM_DIAGRAM):   COUNT=11;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.55;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.55;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
32070      output;
MPRINT(EM_DIAGRAM):   output;
32071      WidgBuy="NO"; COUNT=9; DATAPRIOR=0.45; TRAINPRIOR=0.45; DECPRIOR=.; DECISION1=0;
32071    ! DECISION2=1;
MPRINT(EM_DIAGRAM):   WidgBuy="NO";
MPRINT(EM_DIAGRAM):   COUNT=9;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.45;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.45;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
32072      output;
MPRINT(EM_DIAGRAM):   output;
32073      ;
MPRINT(EM_DIAGRAM):   ;
32074      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.WIDGBUY has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

32075      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
32076      modify WidgBuy(type=PROFIT label=WidgBuy);
MPRINT(EM_DIAGRAM):   modify WidgBuy(type=PROFIT label= WidgBuy);
MPRINT(EM_DIAGRAM):   label DECISION1= 'YES';
MPRINT(EM_DIAGRAM):   label DECISION2= 'NO';
MPRINT(EM_DIAGRAM):   run;
32077      label DECISION1= 'YES';
32078      label DECISION2= 'NO';
32079      run;

NOTE: MODIFY was successful for WORK.WIDGBUY.DATA.
32080      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

32081      data EM_Neural;
MPRINT(EM_DIAGRAM):   data EM_Neural;
32082      set EMWS1.FIMPORT_train(keep=
32083      Age Income Residence WidgBuy X2 X4 X5 );
MPRINT(EM_DIAGRAM):   set EMWS1.FIMPORT_train(keep= Age Income Residence WidgBuy X2 X4 X5 );
32084      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: View EMWS1.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 20 observations read from the data set EMWS1.FIMPORT_DATA.
NOTE: There were 20 observations read from the data set EMWS1.FIMPORT_TRAIN.
NOTE: The data set WORK.EM_NEURAL has 20 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Neural: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
32085      *------------------------------------------------------------* ;
32086      * Neural: DMDBClass Macro ;
32087      *------------------------------------------------------------* ;
32088      %macro DMDBClass;
32089          Income(ASC) Residence(ASC) WidgBuy(DESC)
32090      %mend DMDBClass;
32091      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
32092      * Neural: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Neural: DMDBVar Macro ;
32093      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
32094      %macro DMDBVar;
32095          Age X2 X4 X5
32096      %mend DMDBVar;
32097      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
32098      * Neural: Create DMDB;
MPRINT(EM_DIAGRAM):   * Neural: Create DMDB;
32099      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
32100      proc dmdb batch data=WORK.EM_Neural
32101      dmdbcat=WORK.Neural_DMDB
32102      maxlevel = 513
32103      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_Neural dmdbcat=WORK.Neural_DMDB maxlevel = 
513 ;
MPRINT(EM_DIAGRAM):   class
32104      class %DMDBClass;
MPRINT(DMDBCLASS):   Income(ASC) Residence(ASC) WidgBuy(DESC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
32105      var %DMDBVar;
MPRINT(DMDBVAR):   Age X2 X4 X5
MPRINT(EM_DIAGRAM):  ;
32106      target
32107      WidgBuy
32108      ;
MPRINT(EM_DIAGRAM):   target WidgBuy ;
32109      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 20   Memory used = 511K.
NOTE: There were 20 observations read from the data set WORK.EM_NEURAL.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
32110      quit;
32111      *--- end code ---*;

32112      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
32113      * Neural: Interval Input Variables Macro ;
MPRINT(EM_DIAGRAM):   * Neural: Interval Input Variables Macro ;
32114      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
32115      %macro INTINPUTS;
32116          Age X2 X4 X5
32117      %mend INTINPUTS;
32118      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
32119      * Neural: Binary Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Neural: Binary Inputs Macro ;
32120      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
32121      %macro BININPUTS;
32122      
32123      %mend BININPUTS;
32124      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
32125      * Neural: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Neural: Nominal Inputs Macro ;
32126      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
32127      %macro NOMINPUTS;
32128          Income Residence
32129      %mend NOMINPUTS;
32130      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
32131      * Neural: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Neural: Ordinal Inputs Macro ;
32132      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
32133      %macro ORDINPUTS;
32134      
32135      %mend ORDINPUTS;
32136      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
32137      * Neural Network Training;
MPRINT(EM_DIAGRAM):   * Neural Network Training;
32138      ;
MPRINT(EM_DIAGRAM):   ;
32139      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
32140      proc neural data=EM_Neural dmdbcat=WORK.Neural_DMDB
32141      random=12345
32142      ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_Neural dmdbcat=WORK.Neural_DMDB random=12345 ;
32143      nloptions
32144      ;
MPRINT(EM_DIAGRAM):   nloptions ;
32145      performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
32146      netopts
32147      decay=0;
MPRINT(EM_DIAGRAM):   netopts decay=0;
MPRINT(EM_DIAGRAM):   input
32148      input %INTINPUTS / level=interval id=intvl
MPRINT(INTINPUTS):   Age X2 X4 X5
32149      ;
MPRINT(EM_DIAGRAM):   / level=interval id=intvl ;
MPRINT(EM_DIAGRAM):   input
32150      input %NOMINPUTS / level=nominal id=nom
MPRINT(NOMINPUTS):   Income Residence
32151      ;
MPRINT(EM_DIAGRAM):   / level=nominal id=nom ;
32152      target WidgBuy / level=NOMINAL id=WidgBuy
32153      bias
32154      ;
MPRINT(EM_DIAGRAM):   target WidgBuy / level=NOMINAL id=WidgBuy bias ;
32155      arch MLP
32156      Hidden=1
32157      ;
MPRINT(EM_DIAGRAM):   arch MLP Hidden=1 ;
32158      Prelim 5 preiter=10
32159      pretime=3600
32160      Outest=EMWS1.Neural_PRELIM_OUTEST
32161      ;
MPRINT(EM_DIAGRAM):   Prelim 5 preiter=10 pretime=3600 Outest=EMWS1.Neural_PRELIM_OUTEST ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: Convergence criterion (ABSCONV=0.0013963447) satisfied.
NOTE: Convergence criterion (ABSCONV=0.0013963447) satisfied.
NOTE: Convergence criterion (ABSCONV=0.0013963447) satisfied.
NOTE: Convergence criterion (ABSCONV=0.0013963447) satisfied.
NOTE: Convergence criterion (ABSCONV=0.0013963447) satisfied.
NOTE: At least one element of the gradient is greater than 1e-3.
NOTE: The data set EMWS1.NEURAL_PRELIM_OUTEST has 11 observations and 21 variables.
32162      save network=EMWS1.Neural_NETWORK.dm_neural;
MPRINT(EM_DIAGRAM):   save network=EMWS1.Neural_NETWORK.dm_neural;
NOTE: Creating a new Catalogue with entry EMWS1.NEURAL_NETWORK.DM_NEURAL.
NOTE: Entry EMWS1.NEURAL_NETWORK.DM_NEURAL has been opened.
NOTE: Entry EMWS1.NEURAL_NETWORK.DM_NEURAL has been closed.
32163      train Maxiter=50
32164      maxtime=14400
32165      Outest=EMWS1.Neural_outest estiter=1
32166      Outfit=EMWS1.Neural_OUTFIT
32167      ;
MPRINT(EM_DIAGRAM):   train Maxiter=50 maxtime=14400 Outest=EMWS1.Neural_outest estiter=1 
Outfit=EMWS1.Neural_OUTFIT ;
NOTE: Convergence criterion (ABSCONV=0.0013963447) satisfied.
NOTE: The data set EMWS1.NEURAL_OUTEST has 13 observations and 21 variables.
NOTE: The data set EMWS1.NEURAL_OUTFIT has 4 observations and 23 variables.
32168      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_NEURAL has 20 observations and 7 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed pages 14-17.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.35 seconds
      cpu time            0.12 seconds
      

MPRINT(EM_DIAGRAM):   quit;
32169      quit;

32170      proc sort data=EMWS1.Neural_OUTFIT(where=(_iter_ ne . and _NAME_="OVERALL"))
32170    ! out=fit_Neural;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural_OUTFIT(where=(_iter_ ne . and 
_NAME_="OVERALL")) out=fit_Neural;
32171      by _AVERR_;
MPRINT(EM_DIAGRAM):   by _AVERR_;
32172      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set EMWS1.NEURAL_OUTFIT.
      WHERE (_iter_ not = .) and (_NAME_='OVERALL');
NOTE: The data set WORK.FIT_NEURAL has 2 observations and 23 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

32173      %GLOBAL ITER;
32174      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
32175      set fit_Neural(obs=1);
MPRINT(EM_DIAGRAM):   set fit_Neural(obs=1);
32176      call symput('ITER',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('ITER',put(_ITER_, 6.));
32177      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.FIT_NEURAL.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

32178      data EMWS1.Neural_INITIAL;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_INITIAL;
32179      set EMWS1.Neural_outest(where=(_ITER_ eq &ITER and _OBJ_ ne .));
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_outest(where=(_ITER_ eq 0 and _OBJ_ ne .));
32180      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set EMWS1.NEURAL_OUTEST.
      WHERE (_ITER_=0) and (_OBJ_ not = .);
NOTE: The data set EMWS1.NEURAL_INITIAL has 2 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

32181      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
32182      * Neural Network Model Selection;
MPRINT(EM_DIAGRAM):   * Neural Network Model Selection;
32183      ;
MPRINT(EM_DIAGRAM):   ;
32184      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
32185      proc neural data=EM_Neural dmdbcat=WORK.Neural_DMDB
32186      network = EMWS1.Neural_NETWORK.dm_neural
32187      random=12345
32188      ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_Neural dmdbcat=WORK.Neural_DMDB network = 
EMWS1.Neural_NETWORK.dm_neural random=12345 ;
NOTE: Entry EMWS1.NEURAL_NETWORK.DM_NEURAL has been opened.
NOTE: Entry EMWS1.NEURAL_NETWORK.DM_NEURAL has been closed.
32189      nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
32190      performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
32191      initial inest=EMWS1.Neural_INITIAL;
MPRINT(EM_DIAGRAM):   initial inest=EMWS1.Neural_INITIAL;
NOTE: The data set EMWS1.NEURAL_INITIAL has 2 observations and 21 variables.
32192      train tech=NONE;
MPRINT(EM_DIAGRAM):   train tech=NONE;
NOTE: No optimization performed.
32193      code
32193    ! file="C:\Users\bteric01\Documents\Tutorials_Projects\Project_2\Workspaces\EMWS1\Neur
32193    ! al\SCORECODE.sas"
32194      group=Neural
32195      ;
MPRINT(EM_DIAGRAM):   code 
file="C:\Users\bteric01\Documents\Tutorials_Projects\Project_2\Workspaces\EMWS1\Neural\SCORECOD
E.sas" group=Neural ;
NOTE: External file 
      C:\Users\bteric01\Documents\Tutorials_Projects\Project_2\Workspaces\EMWS1\Neural\SCORECOD
      E.sas opened.
32196      ;
MPRINT(EM_DIAGRAM):   ;
32197      code
32197    ! file="C:\Users\bteric01\Documents\Tutorials_Projects\Project_2\Workspaces\EMWS1\Neur
32197    ! al\RESIDUALSCORECODE.sas"
32198      group=Neural
32199      residual
32200      ;
MPRINT(EM_DIAGRAM):   code 
file="C:\Users\bteric01\Documents\Tutorials_Projects\Project_2\Workspaces\EMWS1\Neural\RESIDUAL
SCORECODE.sas" group=Neural residual ;
NOTE: External file 
      C:\Users\bteric01\Documents\Tutorials_Projects\Project_2\Workspaces\EMWS1\Neural\RESIDUAL
      SCORECODE.sas opened.
32201      ;
MPRINT(EM_DIAGRAM):   ;
32202      score data=EMWS1.FIMPORT_train out=_NULL_
NOTE: View EMWS1.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      
32203      outfit=WORK.FIT1
32204      role=TRAIN
32205      outkey=EMWS1.Neural_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS1.FIMPORT_train out=_NULL_ outfit=WORK.FIT1 role=TRAIN 
outkey=EMWS1.Neural_OUTKEY;
NOTE: The data set EMWS1.NEURAL_OUTKEY has 20 observations and 8 variables.
NOTE: The data set EMWS1.FIMPORT_TRAIN has . observations and 7 variables.
NOTE: There were 20 observations read from the data set EMWS1.FIMPORT_DATA.
NOTE: The data set WORK.FIT1 has 2 observations and 23 variables.
32206      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_NEURAL has 20 observations and 7 variables.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.15 seconds
      cpu time            0.14 seconds
      

MPRINT(EM_DIAGRAM):   quit;
32207      quit;
32208      data EMWS1.Neural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_OUTFIT;
32209      merge WORK.FIT1;
MPRINT(EM_DIAGRAM):   merge WORK.FIT1;
32210      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK.FIT1.
NOTE: The data set EMWS1.NEURAL_OUTFIT has 2 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

32211      data EMWS1.Neural_EMESTIMATE;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_EMESTIMATE;
32212      set EMWS1.Neural_outest;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_outest;
32213      if _type_ ^in('HESSIAN' 'GRAD');
MPRINT(EM_DIAGRAM):   if _type_ ^in('HESSIAN' 'GRAD');
32214      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS1.NEURAL_OUTEST.
NOTE: The data set EMWS1.NEURAL_EMESTIMATE has 2 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

32215      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
32216      delete EM_Neural;
MPRINT(EM_DIAGRAM):   delete EM_Neural;
32217      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.EM_NEURAL (memtype=DATA).
32218      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

32219      data EMWS1.Neural_PLOTDS(where=(_iter_ ne . and _NAME_="OVERALL"));
MPRINT(EM_DIAGRAM):    data EMWS1.Neural_PLOTDS(where=(_iter_ ne . and _NAME_="OVERALL"));
32220      set fit_Neural;
MPRINT(EM_DIAGRAM):   set fit_Neural;
32221      attrib _ITER_ label="%sysfunc(sasmsg(sashelp.dmine, rpt_trainiterations_vlabel  ,
32221    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   attrib _ITER_ label="Training Iterations";
32222      attrib _NAME_ label="%sysfunc(sasmsg(sashelp.dmine, rpt_varsel_label_name  ,
32222    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   attrib _NAME_ label="Name";
32223      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK.FIT_NEURAL.
NOTE: The data set EMWS1.NEURAL_PLOTDS has 2 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

32224      proc sort data=EMWS1.Neural_PLOTDS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural_PLOTDS;
32225      by _ITER_;
MPRINT(EM_DIAGRAM):   by _ITER_;
32226      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set EMWS1.NEURAL_PLOTDS.
NOTE: The data set EMWS1.NEURAL_PLOTDS has 2 observations and 23 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

32227      data tempweight (drop= _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_ _averr_ _p_num_
32227    ! where=(_type_ eq "PARMS" and _iter_ eq 0) );
MPRINT(EM_DIAGRAM):    data tempweight (drop= _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_ 
_averr_ _p_num_ where=(_type_ eq "PARMS" and _iter_ eq 0) );
32228      set EMWS1.Neural_EMESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMESTIMATE;
32229      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set EMWS1.NEURAL_EMESTIMATE.
NOTE: The data set WORK.TEMPWEIGHT has 2 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

32230      proc sort;
MPRINT(EM_DIAGRAM):   proc sort;
32231      by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
32232      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set WORK.TEMPWEIGHT has 2 observations and 13 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

32233      proc transpose data=tempweight out=EMWS1.Neural_WEIGHTDS;
MPRINT(EM_DIAGRAM):   proc transpose data=tempweight out=EMWS1.Neural_WEIGHTDS;
32234      by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
32235      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set EMWS1.NEURAL_WEIGHTDS has 22 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

32236      data EMWS1.Neural_WEIGHTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_WEIGHTDS;
32237      set EMWS1.Neural_WEIGHTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_WEIGHTDS;
32238      FROM = trim(left(scan(_LABEL_, 1, '->')));
MPRINT(EM_DIAGRAM):   FROM = trim(left(scan(_LABEL_, 1, '->')));
32239      TO = trim(left(scan(_LABEL_, 2, '>')));
MPRINT(EM_DIAGRAM):   TO = trim(left(scan(_LABEL_, 2, '>')));
32240      WEIGHT = COL1;
MPRINT(EM_DIAGRAM):   WEIGHT = COL1;
32241      if (TO eq '') or (FROM eq '') then delete;
MPRINT(EM_DIAGRAM):   if (TO eq '') or (FROM eq '') then delete;
32242      label _LABEL_ ="%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel  , NOQUOTE))" FROM
32242    ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel  , NOQUOTE))" TO =
32242    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel  , NOQUOTE))" WEIGHT =
32243         "%sysfunc(sasmsg(sashelp.dmine, rpt_weight_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LABEL_ = "Label" FROM = "From" TO = "Into" WEIGHT = "Weight";
32244      keep FROM TO WEIGHT _LABEL_;
MPRINT(EM_DIAGRAM):   keep FROM TO WEIGHT _LABEL_;
32245      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set EMWS1.NEURAL_WEIGHTDS.
NOTE: The data set EMWS1.NEURAL_WEIGHTDS has 20 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

32246      proc sort data=EMWS1.Neural_WEIGHTDS nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural_WEIGHTDS nodupkey;
32247      by _LABEL_;
MPRINT(EM_DIAGRAM):   by _LABEL_;
32248      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set EMWS1.NEURAL_WEIGHTDS.
NOTE: 10 observations with duplicate key values were deleted.
NOTE: The data set EMWS1.NEURAL_WEIGHTDS has 10 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
